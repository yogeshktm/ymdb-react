{"version":3,"sources":["components/MovieCard/index.js","components/MovieCardPlaceholder/index.js","container/MovieCardContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","this","props","fullData","imdbID","imdbRating","Title","Poster","Year","Actors","Plot","Language","Genre","Director","Runtime","Country","imdbLink","onSubmit","handleSubmit","className","autoFocus","type","id","autoComplete","onChange","handleChange","placeholder","handleMovieTypeChange","class","notFound","href","src","alt","React","Component","MovieCardPlaceholder","aria-hidden","MovieCardContainer","state","title","released","genre","movieData","searchKeyword","searchType","isLoading","getMovieDetails","bind","handleResponse","movieName","finalUrl","apiUrl","setState","fetch","then","response","json","data","catch","error","console","log","Response","e","preventDefault","length","target","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a92c1c60.chunk.js","sourcesContent":["import React from 'react';\nexport class MovieCard extends React.Component{\n    render(){\n        const {imdbID,imdbRating,Title,Poster,Year,Actors,Plot,Language,Genre,Director,Runtime,Country} = this.props.fullData;\n        let imdbLink = 'https://imdb.com/title/' + imdbID;\n        return(\n          <>\n          <form onSubmit={this.props.handleSubmit} className=\"search-box\">\n          <input autoFocus className=\"search\" type=\"search\" id=\"search\" autoComplete=\"off\" onChange={this.props.handleChange} placeholder=\"Search\"/>\n          <select onChange={this.props.handleMovieTypeChange}>\n            <option>movie</option>\n            <option>series</option>\n            <option>episodes</option>\n          </select>\n          <button className=\"btn\" type=\"submit\">SEARCH</button>\n         </form>\n        <div class=\"card\">\n          <div class={ this.props.notFound === true ? 'hidden' : 'movie-info' }>\n              <p><span className=\"release-year\">{Year}</span> - <span className=\"country\">{Country}</span></p>\n              <h2 className=\"movie-title\">{Title}</h2>\n              <p class=\"lang\">Language: {Language}</p>\n              <p>Runtime: {Runtime}</p>\n              <p>Genre: {Genre}</p>\n              <p>Director : {Director}</p>\n              <p>Cast: {Actors}</p>\n              <p>Plot:</p>\n              <p>{Plot}</p>\n              <p>IMDB Rating : {imdbRating} / 10</p>\n              <a href={imdbLink}>IMDB Link</a>\n              </div>\n              <img class=\"poster-img\" src={Poster === 'N/A' ? `https://dummyimage.com/390x610/c89f9b/fff.png&text=Poster+not+found` : Poster} alt={Title}/>\n            </div>\n          </>\n        );\n      }\n}","import React from 'react';\nexport class MovieCardPlaceholder extends React.Component{\n    render(){\n        return(\n          <>\n        <div class=\"card\">\n            <div class=\"movie-info placeholder\">\n                <h3 class=\"title-ph\" aria-hidden=\"true\"></h3>\n                <p></p>\n                <p></p>\n                <p></p>\n                <p></p>\n                <p></p>\n                <p></p>\n                <p></p>\n            </div>  \n            <img class=\"poster-img\" src=\"https://dummyimage.com/390x610/c89f9b/fff.png&text=Loading...\" alt=\"loading...\"/>\n        </div>\n          </>\n        );\n      }\n}","import React from 'react';\n\nimport { MovieCard } from '../../components/MovieCard';\nimport { MovieCardPlaceholder } from '../../components/MovieCardPlaceholder';\n\nexport class MovieCardContainer extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      title:\"\",\n      released:\"\",\n      genre:\"\",\n      movieData:\"\",\n      searchKeyword:\"\",\n      notFound: false,\n      searchType: \"movie\",\n      isLoading: false\n    };\n    this.getMovieDetails = this.getMovieDetails.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleResponse = this.handleResponse.bind(this);\n    this.handleMovieTypeChange = this.handleMovieTypeChange.bind(this);\n  }\n  componentWillMount(){\n\n  }\n  componentDidMount(){\n    let defaultMovie = \"Aaranya kaandam\"\n    this.getMovieDetails(defaultMovie);\n  }\n  getMovieDetails(movieName){\n    const apiUrl = \"https://www.omdbapi.com/?\";\n    const apiKey = \"7c5d79b\";\n    const searchType = this.state.searchType;\n    const finalUrl = apiUrl + 'apiKey=' + apiKey + '&t=' + movieName + '&type=' +searchType + '&plot=full';\n    this.setState({isLoading: true},() => {\n      fetch(finalUrl)\n      .then(response => response.json())\n      .then(this.handleResponse)\n      .then(\n          // data => console.log(data),\n          data => this.setState({\n              isLoading:false,\n              movieData:data\n          })\n      )\n      .catch(error => console.log(error) );\n    })\n  }\n  handleResponse (response){\n    if (response.Response === \"False\") {\n      console.log(\"inside\")\n      this.setState({\n        notFound:true\n      })\n    }\n    else{\n      this.setState({\n        notFound:false\n      })\n    }\n  return response;\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    let searchKeyword = this.state.searchKeyword;\n    console.log(searchKeyword.length)\n    if(searchKeyword.length > 0){\n      this.getMovieDetails(this.state.searchKeyword,this.state.searchType);\n    }\n  }\n  handleChange(e){\n    console.log(e.target.value);\n    this.setState({\n      searchKeyword:e.target.value\n    })\n  }\n  handleMovieTypeChange(e){\n    console.log(e.target.value);\n    this.setState({\n      searchType:e.target.value\n    })\n  }\n  render(){\n      return(\n        <div class=\"container\">\n          { \n          this.state.isLoading ? \n          <MovieCardPlaceholder></MovieCardPlaceholder> :\n          <MovieCard notFound={this.state.notFound} \n          handleChange={this.handleChange} \n          handleSubmit={this.handleSubmit}\n          handleMovieTypeChange={this.handleMovieTypeChange} \n          fullData={this.state.movieData}>\n          </MovieCard> \n          }\n          {\n            this.state.notFound ? <p>Movie not found</p> : null\n          }\n        </div>\n      )\n    }\n}\n","import './App.css';\n\nimport { MovieCardContainer } from './container/MovieCardContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"logo\">\n        <h1>ðŸŽ¬ YMDB</h1>\n      </header>\n      <MovieCardContainer></MovieCardContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}